import { NextRequest, NextResponse } from 'next/server'

// AI-powered post generation endpoint
export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    const { topic, authorName = 'AI Assistant', category = 'ai' } = body

    if (!topic) {
      return NextResponse.json(
        { error: 'Topic is required' },
        { status: 400 }
      )
    }

    // Generate compelling title based on theme
    const generateThemeBasedTitle = (topic: string) => {
      if (topic.includes('AI時代') || topic.includes('ビジネスマン')) {
        return [
          `AI時代を生き抜く意外なスキル〜プログラマー父親が見つけた「変化適応術」`,
          `ホワイトカラーの新しい働き方〜40代が実践するAI共存のコツ`,
          `変化の波に乗る生き方〜家族を守りながらキャリアを築く知恵`,
          `AIに代替されない価値の作り方〜ビジネスマンが磨くべき本質的スキル`,
          `未来への備え方〜プログラマーが教える「学び続ける習慣」の力`
        ]
      }
      return [
        `情報疲れを解消する意外な方法〜プログラマーが実践した「INPUT整理術」`,
        `デジタル時代の新しい休息法〜40代パパが見つけた「情報断食」のススメ`,
        `情報の波に飲まれない生き方〜家族と向き合う時間を取り戻すコツ`,
        `頭の中を整理するシンプルな習慣〜情報過多の時代を乗り切る知恵`,
        `スマホ疲れから抜け出すヒント〜意外と知らない「情報消化力」の鍛え方`
      ]
    }

    const titleOptions = generateThemeBasedTitle(topic)
    const title = titleOptions[Math.floor(Math.random() * titleOptions.length)]
    
    const generateThemeBasedExcerpt = (topic: string) => {
      if (topic.includes('AI時代') || topic.includes('ビジネスマン')) {
        return `AI技術が急速に発展する中、ホワイトカラーとして長期的に価値を提供し続けるための考え方について、3児の父でもあるプログラマーの視点から書きました。`
      }
      return `情報の流れが加速する現代。家族との時間を大切にしながら、上手に情報と付き合う方法について考えてみました。`
    }
    
    const excerpt = generateThemeBasedExcerpt(topic)
    
    const generateThemeBasedContent = (topic: string, title: string) => {
      if (topic.includes('AI時代') || topic.includes('ビジネスマン')) {
        return `
## はじめに

今回は「${topic}」というテーマで書いていきます。

皆さん、AI技術の進歩に対してどんな気持ちを抱いていますか？「自分の仕事がAIに代替されるのではないか」「どんなスキルを身につければいいのか分からない」といった不安を感じている方も多いのではないでしょうか。

実は先日、職場でChatGPTを使った業務効率化の話題が出まして。同僚の多くが「便利だけど、将来が心配」という複雑な反応を示していたんです。そんな中で、3児の父でもある私自身が考えた「AI時代をポジティブに生き抜く方法」について、お話ししていきたいと思います。

## 家族から学んだ「変化への向き合い方」

そんな中ですね、週末に子どもたちと話していて、あることに気づきました。

小学生の息子が「学校でプログラミングの授業が始まった」と言うんです。彼は最初「難しそう」と言っていたんですが、1ヶ月もすると「今日はこんなゲームを作った」と嬉しそうに報告してくれるようになりました。

一方で、私たち大人は新しい技術に対して「覚えなければいけない」「追いつかなければ」と構えてしまいがちですよね。でも子どもたちを見ていると、もっと自然に「面白そう」「やってみよう」という姿勢で新しいことに取り組んでいます。

妻も「変化を恐れるより、変化を楽しめるかどうかが大事なのかもね」と言っていて、さすがだなと思いました。

## 実際に試してみた「AI時代の準備法」

ということで、プログラマーらしく、少しシステマティックにAI時代への準備を考えてみることにしました。

まず、現在の自分の仕事でAIが代替できる部分と、代替できない部分を整理してみたんです。そうすると、意外な発見がありました。

そこで実践してみたのが、こんな方法です：

### AIツールとの協働実験
毎日の業務で、AIツールを使って効率化できる作業を見つけて試してみました。単純な作業の時間を短縮することで、より創造的な部分に時間を使えるようになったんです。

### 家族との技術共有タイム
夕食の時に、その日試したAIツールや新しい技術について家族と話す時間を作りました。子どもたちの率直な反応や質問が、自分の理解を深めるのに役立っています。

### 週末のスキルアップ学習
土曜日の午前中は、新しいプログラミング言語やAI関連の学習に充てるようにしました。家族も応援してくれて、「パパの勉強タイム」として定着しています。

## 意外な発見と変化

この取り組みを3ヶ月ほど続けてみて、いくつか発見がありました。

まず、AIを「競争相手」ではなく「協力パートナー」として捉えると、仕事がより楽しくなることです。AIが得意な部分は任せて、人間にしかできない創造性やコミュニケーションに集中できるようになりました。

それから、学び続ける習慣が身につくと、変化への不安が好奇心に変わることも実感しました。「次は何を学ぼうか」と考えるのが楽しみになったんです。

考えてみると、プログラミングの世界では常に新しい技術が生まれ続けています。その中で20年近く働き続けてこられたのは、「学び続ける習慣」があったからなのかもしれません。

## 皆さんのAI時代への準備は？

皆さんは、AI時代に向けてどんな準備をされていますか？

不安を感じている方もいるかもしれませんし、既に積極的にAIツールを活用されている方もいるでしょう。家族のためにも、長期的に価値を提供し続けられるキャリアを築いていきたいですよね。

もしよろしければ、コメントで「私はこんな取り組みをしています」という話を教えてください。きっと皆さんそれぞれに、素晴らしいアイデアや経験をお持ちなんじゃないかなと思います。

## おわりに

今回は「${topic}」というテーマで書きました。

結局のところ、技術は道具なので、使い方次第なんですよね。AIを恐れるのではなく、上手に活用して自分の価値を高めていければ、家族も安心できるし、仕事ももっと楽しくなると思います。

40代になって、子どもたちも大きくなってきた今だからこそ、変化を恐れず新しいことにチャレンジしていく姿勢を見せていきたいですね。家族との時間を大切にしながら、新しい技術とも楽しく付き合っていけたらいいなと思います。

皆さんの体験談も、ぜひお聞かせください。
        `.trim()
      }
      
      return `
## はじめに

今回は「情報疲れを解消する意外な方法」というテーマで書いていきます。

皆さん、最近情報に疲れを感じることはありませんか？スマホを開けば次々と新しいニュースや動画が流れてきて、気づくとあっという間に時間が過ぎている、なんて経験はないでしょうか。

実は先日、私自身もそんな状況になってしまいまして。子どもたちと遊んでいる時間にも、ついついスマホに手が伸びてしまう自分に気づいたんです。これはいけないなと思って、少し情報との付き合い方を見直してみました。

## 家族時間で気づいた「情報の質」

そんな中ですね、週末に家族と過ごしていて、あることに気づきました。

子どもたちと話していると、彼らが学校で聞いてくる情報と、私がネットで見る情報って、質が全然違うんですね。子どもたちの話は具体的で、実体験に基づいているから、聞いていて「なるほど」と思えることが多いんです。

一方で、私がスマホで見ている情報って、どこか表面的というか、消費するだけで終わってしまうことが多い気がします。

例えばですね、息子が「今日、理科の実験でこんな発見があった」と話してくれる内容の方が、技術系のニュースサイトを見るよりも、よっぽど学びがあったりするんです。

妻も「情報って、受け取るだけじゃなくて、誰かと話すことで初めて自分のものになるのかもね」と言っていて、さすがだなと思いました。

## 実際に試してみた「情報整理術」

ということで、プログラマーらしく、少しシステマティックに情報の整理をしてみることにしました。

まず、1日のうちでどのくらい情報に触れているかを記録してみたんです。そうすると、思った以上に多くの時間を情報収集に使っていることがわかりました。

そこで試してみたのが、こんな方法です：

### 朝の情報タイム（30分限定）
朝の30分だけ、本当に必要な情報をチェックする時間を作りました。仕事に関係することと、家族に関係することだけに絞って。

### 家族との対話タイム
夕食の時に、その日見聞きした面白い情報を家族でシェアする時間を作りました。子どもたちも積極的に話してくれるようになって、これが意外と楽しいんです。

### 週末のデジタル断食
土曜日の午後は、意識的にスマホを触らない時間を作ってみました。最初は落ち着かなかったんですが、慣れてくると頭がすっきりするのを感じました。

## 意外な発見と効果

この方法を2週間ほど続けてみて、いくつか発見がありました。

まず、情報を制限することで、逆に大切な情報に集中できるようになったことです。以前は「とりあえず見ておこう」という感じで情報を消費していましたが、今は「これは本当に必要かな？」と考えるようになりました。

それから、家族との会話が増えたことも嬉しい変化でした。私が情報に集中しすぎていた時間を、家族との対話に使えるようになったんです。

考えてみると、情報って「入力」だけじゃなくて、「消化」や「活用」も大切なんじゃないかなと思います。プログラミングでも、コードを書くだけじゃなくて、リファクタリングやテストが重要なように。

## 皆さんの情報との付き合い方は？

皆さんは、普段どんな風に情報と付き合っていますか？

私みたいに、気づくと情報に振り回されてしまうという人もいるかもしれませんし、上手に情報を活用されている人もいるでしょう。

もしよろしければ、コメントで「私はこんな工夫をしています」という話を教えてください。きっと皆さんそれぞれに、素晴らしいアイデアをお持ちなんじゃないかなと思います。

## おわりに

今回は「情報疲れを解消する意外な方法」というテーマで書きました。

結局のところ、情報って道具なので、使い方次第なんですよね。上手に活用できれば生活を豊かにしてくれるし、振り回されてしまうと疲れてしまう。

40代になって、子どもたちも大きくなってきた今だからこそ、情報との付き合い方を見直すいい機会なのかもしれません。家族との時間を大切にしながら、新しい技術や知識も楽しく学んでいけたらいいなと思います。

皆さんの体験談も、ぜひお聞かせください。
      `.trim()
    }
    
    const content = generateThemeBasedContent(topic, title)

    // 品質チェック実行
    const qualityCheckResponse = await fetch(`${request.nextUrl.origin}/api/quality-check`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        title,
        content,
        excerpt
      })
    })

    const qualityResult = await qualityCheckResponse.json()
    
    // 品質チェック失敗時は警告付きで続行
    if (!qualityResult.qualityScore?.passed) {
      console.warn('⚠️ 記事品質チェックで改善推奨項目あり:', qualityResult.qualityScore?.recommendations)
    }

    // Create the post using our API
    const response = await fetch(`${request.nextUrl.origin}/api/posts`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        title,
        content,
        excerpt,
        category,
        authorName
      })
    })

    if (!response.ok) {
      throw new Error('Failed to create post')
    }

    const result = await response.json()

    return NextResponse.json({
      success: true,
      post: result.post,
      message: `AI記事「${title}」が正常に作成されました`,
      qualityScore: qualityResult.qualityScore,
      details: {
        title,
        excerpt,
        category,
        authorName,
        topic,
        qualityPassed: qualityResult.qualityScore?.passed || false,
        qualityScore: qualityResult.qualityScore?.overallScore || 0
      }
    })

  } catch (error) {
    console.error('Error generating AI post:', error)
    return NextResponse.json(
      { error: 'Failed to generate AI post' },
      { status: 500 }
    )
  }
}